#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_uop_port_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_uop_port_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_uop_port_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_uop_port_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_uop_port_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_uop_port_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_uop_port_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_uop_port_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_uop_port_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_uop_port_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_uop_port_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_uop_port_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_uop_port_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_uop_port_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_uop_port_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_uop_port_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_uop_port_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_uop_port_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_uop_port_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_uop_port_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_uop_port_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_uop_port_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_uop_port_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_uop_port_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_uop_port_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_uop_port_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_uop_port_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_uop_port_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_uop_port_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_uop_port_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_uop_port_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_uop_port_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_uop_port_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_uop_port_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_uop_port_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_uop_port_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_uop_port_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_uop_port_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_uop_port_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_uop_port_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_uop_port_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_uop_port_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_uop_port_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_uop_port_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_uop_port_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_data_port_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_data_port_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_data_port_AWADDR", 32, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_data_port_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_data_port_AWLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_data_port_AWSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_data_port_AWBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_data_port_AWLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_data_port_AWCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_data_port_AWPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_data_port_AWQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_data_port_AWREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_data_port_AWUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_data_port_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_data_port_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_data_port_WDATA", 64, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_data_port_WSTRB", 8, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_data_port_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_data_port_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_data_port_WUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_data_port_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_data_port_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_data_port_ARADDR", 32, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_data_port_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_data_port_ARLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_data_port_ARSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_data_port_ARBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_data_port_ARLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_data_port_ARCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_data_port_ARPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_data_port_ARQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_data_port_ARREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_data_port_ARUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_data_port_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_data_port_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_data_port_RDATA", 64, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_data_port_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_data_port_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_data_port_RUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_data_port_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_data_port_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_data_port_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_data_port_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_data_port_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_data_port_BUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("gemm_queue_V_V_TDATA", 128, hls_in, 5, "axis", "in_data", 1),
	Port_Property("gemm_queue_V_V_TVALID", 1, hls_in, 5, "axis", "in_vld", 1),
	Port_Property("gemm_queue_V_V_TREADY", 1, hls_out, 5, "axis", "in_acc", 1),
	Port_Property("l2g_dep_queue_V_TDATA", 8, hls_in, 6, "axis", "in_data", 1),
	Port_Property("l2g_dep_queue_V_TVALID", 1, hls_in, 6, "axis", "in_vld", 1),
	Port_Property("l2g_dep_queue_V_TREADY", 1, hls_out, 6, "axis", "in_acc", 1),
	Port_Property("s2g_dep_queue_V_TDATA", 8, hls_in, 7, "axis", "in_data", 1),
	Port_Property("s2g_dep_queue_V_TVALID", 1, hls_in, 7, "axis", "in_vld", 1),
	Port_Property("s2g_dep_queue_V_TREADY", 1, hls_out, 7, "axis", "in_acc", 1),
	Port_Property("g2l_dep_queue_V_TDATA", 8, hls_out, 8, "axis", "out_data", 1),
	Port_Property("g2l_dep_queue_V_TVALID", 1, hls_out, 8, "axis", "out_vld", 1),
	Port_Property("g2l_dep_queue_V_TREADY", 1, hls_in, 8, "axis", "out_acc", 1),
	Port_Property("g2s_dep_queue_V_TDATA", 8, hls_out, 9, "axis", "out_data", 1),
	Port_Property("g2s_dep_queue_V_TVALID", 1, hls_out, 9, "axis", "out_vld", 1),
	Port_Property("g2s_dep_queue_V_TREADY", 1, hls_in, 9, "axis", "out_acc", 1),
	Port_Property("inp_mem_V_Addr_A", 32, hls_out, 10, "bram", "MemPortADDR2", 1),
	Port_Property("inp_mem_V_EN_A", 1, hls_out, 10, "bram", "MemPortCE2", 1),
	Port_Property("inp_mem_V_WEN_A", 16, hls_out, 10, "bram", "MemPortWE2", 1),
	Port_Property("inp_mem_V_Din_A", 128, hls_out, 10, "bram", "MemPortDIN2", 1),
	Port_Property("inp_mem_V_Dout_A", 128, hls_in, 10, "bram", "MemPortDOUT2", 1),
	Port_Property("inp_mem_V_Clk_A", 1, hls_out, 10, "bram", "mem_clk", 1),
	Port_Property("inp_mem_V_Rst_A", 1, hls_out, 10, "bram", "mem_rst", 1),
	Port_Property("wgt_mem_0_V_Addr_A", 32, hls_out, 11, "bram", "MemPortADDR2", 1),
	Port_Property("wgt_mem_0_V_EN_A", 1, hls_out, 11, "bram", "MemPortCE2", 1),
	Port_Property("wgt_mem_0_V_WEN_A", 128, hls_out, 11, "bram", "MemPortWE2", 1),
	Port_Property("wgt_mem_0_V_Din_A", 1024, hls_out, 11, "bram", "MemPortDIN2", 1),
	Port_Property("wgt_mem_0_V_Dout_A", 1024, hls_in, 11, "bram", "MemPortDOUT2", 1),
	Port_Property("wgt_mem_0_V_Clk_A", 1, hls_out, 11, "bram", "mem_clk", 1),
	Port_Property("wgt_mem_0_V_Rst_A", 1, hls_out, 11, "bram", "mem_rst", 1),
	Port_Property("wgt_mem_1_V_Addr_A", 32, hls_out, 12, "bram", "MemPortADDR2", 1),
	Port_Property("wgt_mem_1_V_EN_A", 1, hls_out, 12, "bram", "MemPortCE2", 1),
	Port_Property("wgt_mem_1_V_WEN_A", 128, hls_out, 12, "bram", "MemPortWE2", 1),
	Port_Property("wgt_mem_1_V_Din_A", 1024, hls_out, 12, "bram", "MemPortDIN2", 1),
	Port_Property("wgt_mem_1_V_Dout_A", 1024, hls_in, 12, "bram", "MemPortDOUT2", 1),
	Port_Property("wgt_mem_1_V_Clk_A", 1, hls_out, 12, "bram", "mem_clk", 1),
	Port_Property("wgt_mem_1_V_Rst_A", 1, hls_out, 12, "bram", "mem_rst", 1),
	Port_Property("out_mem_V_Addr_A", 32, hls_out, 13, "bram", "MemPortADDR2", 1),
	Port_Property("out_mem_V_EN_A", 1, hls_out, 13, "bram", "MemPortCE2", 1),
	Port_Property("out_mem_V_WEN_A", 16, hls_out, 13, "bram", "MemPortWE2", 1),
	Port_Property("out_mem_V_Din_A", 128, hls_out, 13, "bram", "MemPortDIN2", 1),
	Port_Property("out_mem_V_Dout_A", 128, hls_in, 13, "bram", "MemPortDOUT2", 1),
	Port_Property("out_mem_V_Clk_A", 1, hls_out, 13, "bram", "mem_clk", 1),
	Port_Property("out_mem_V_Rst_A", 1, hls_out, 13, "bram", "mem_rst", 1),
	Port_Property("s_axi_CONTROL_BUS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_AWADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "compute";
